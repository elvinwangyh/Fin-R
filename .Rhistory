# Libraries
library(fmpapi)
library(quantmod)
source('~/Documents/GitHub/Fin-R/ROC-Band-Trade-beta.r')
# Store data
daily_data <- fmp_daily_prices(ticker)
# Store data
daily_data <- fmp_daily_prices(ticker, last_n = 100)
# https://github.com/jpiburn/fmpapi
list <- fmp_list_forex()
View(list)
# Choice of Ticker
ticker <- 'GBPJPY'
l Trading Rules (ref. TradingView Setup)
## Factors
source('~/Documents/GitHub/Fin-R/ROC-Band-Trade-beta.r')
source('~/Documents/GitHub/Fin-R/ROC-Band-Trade-beta.r')
remotes::install_github("anthonynorth/rscodeio")
rscodeio::install_theme()
source('~/Documents/GitHub/Fin-R/ROC-Band-Trade-beta.r')
source('~/Documents/GitHub/Fin-R/ROC-Band-Trade-beta.r')
install.packages("languageserver", lib="C:/Program Files/R/R-4.0.4/library")
remotes::install_github("anthonynorth/rscodeio")
rscodeio::install_theme()
> rscodeio::install_theme()
rscodeio::install_theme()
library(tidyverse)
library(RND)
library(quantmod)
library(lubridate)
library(plotly)
library(rlist)
asset_symbol <- "BA"
date_today <- today()
spot_price <- getQuote(asset_symbol)$Last
option_chain <- getOptionChain(asset_symbol, Exp = NULL, src = "yahoo")
date_today
spot_price
chosen_chain_inQ <- 2
chosen_chain <- merge(option_chain[[chosen_chain_inQ]][1], option_chain[[chosen_chain_inQ]][2], by.x = "calls.Strike", by.y = "puts.Strike")
na.fill(chosen_chain, 0)
chosen_chain$put.rearranged <- sort(chosen_chain$puts.Last, decreasing = FALSE)
chosen_chain$call.rearranged <- sort(chosen_chain$calls.Last, decreasing = TRUE)
option_exp_list <- names(option_chain)
expiration_date  <- toString(option_exp_list[chosen_chain_inQ])
expiration_date <- strptime(expiration_date, format = "%B.%d.%Y", tz = "EST") %>% as.Date(expiration_date, format = "%Y-%m-%d")
days_to_expiration <- as.double(difftime(expiration_date, date_today, units = "days"))
rates <- extract.rates(
calls = chosen_chain$call.rearranged,
puts = chosen_chain$put.rearranged,
s0 = spot_price,
k = chosen_chain$calls.Strike,
te = days_to_expiration / 365)
rates
open_interest <- plot_ly(chosen_chain, x = ~calls.Strike, y = ~calls.OI, type = 'bar', name = "call OI") %>%
add_trace(y = ~puts.OI, name = 'put OI') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group') %>%
add_segments(name = "Spot Price", x = spot_price, xend = spot_price,
y = 0, yend = max(chosen_chain$calls.OI), line=list(dash="dash"))
open_interest
chosen_chain$cp.ratio <- chosen_chain$calls.OI / chosen_chain$puts.OI
cp_ratio <- plot_ly(chosen_chain, x = ~calls.Strike, y = ~cp.ratio, type = 'bar', name = "Call-Put Ratio") %>%
layout(yaxis = list(title = 'Ratio')) %>%
add_segments(name = "Spot Price", x = spot_price, xend = spot_price,
y = 0, yend = max(chosen_chain$cp.ratio), line=list(dash="dash"))
cp_ratio
volume <- plot_ly(chosen_chain, x = ~calls.Strike, y = ~calls.Vol, type = 'bar', name = "call Volume") %>%
add_trace(y = ~puts.Vol, name = 'Put Volume') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group') %>%
add_segments(name = "Spot Price", x = spot_price, xend = spot_price,
y = 0, yend = max(chosen_chain$calls.OI), line=list(dash="dash"))
volume
implied_volatility <- plot_ly(chosen_chain, x = ~calls.Strike, y = ~calls.IV,
name = "Call IV", type = "scatter", mode = "markers") %>%
add_trace(y = ~puts.IV, name = "Put IV", mode = "markers") %>%
add_segments(name = "Spot Price", x = spot_price, xend = spot_price,
y = 0, yend = max(chosen_chain$puts.IV), line=list(dash="dash")) %>%
layout(autosize = F, width = 800, height = 500)
implied_volatility
extraction_eu_bsm <- extract.bsm.density(r = rates$risk.free.rate,
y = rates$dividend.yield,
te = days_to_expiration/365,
s0 = spot_price,
market.calls = chosen_chain$calls.Last,
call.strikes = chosen_chain$calls.Strike,
market.puts = chosen_chain$puts.Last,
put.strikes = chosen_chain$calls.Strike,
lambda = 1, hessian.flag = F)
eu_bsm_pricing <- price.bsm.option(s0 = spot_price,
k = chosen_chain$calls.Strike,
r = rates$risk.free.rate,
te = days_to_expiration,
sigma = extraction_eu_bsm$zeta,
y = rates$dividend.yield)
chosen_chain$eu.bsm.calls <- eu_bsm_pricing$call
chosen_chain$eu.bsm.puts <- eu_bsm_pricing$put
bsm_model_actual <- plot_ly(chosen_chain, x = ~calls.Strike, y = ~calls.Last,
name = "Market Calls", type = "scatter", mode = "lines+markers") %>%
add_trace(y = ~eu.bsm.calls, name = "BSM Calls", mode = "lines+markers") %>%
add_trace(y = ~puts.Last, name = "Market Puts", mode = "lines+markers") %>%
add_trace(y = ~eu.bsm.puts, name = "BSM Puts", mode = "lines+markers") %>%
add_segments(name = "Spot Price", x = spot_price, xend = spot_price,
y = min(chosen_chain$calls.Last), yend = max(chosen_chain$calls.Last), line=list(dash="dash")) %>%
layout(autosize = F, width = 800, height = 500)
bsm_model_actual
eu_bsm_density <- get.point.estimate(chosen_chain$call.rearranged, chosen_chain$calls.Strike,
rates$risk.free.rate, days_to_expiration/365)
chosen_chain <- chosen_chain[(2:nrow(chosen_chain)-2),]
chosen_chain$eu.bsm.density <- eu_bsm_density
density_eu_bsm <- plot_ly(chosen_chain, x = ~calls.Strike, y = ~eu.bsm.density,
name = "BSM Risk Neutal Density",
type = "scatter", mode = "lines+markers") %>%
add_segments(name = "Spot Price", x = spot_price, xend = spot_price,
y = min(chosen_chain$eu.bsm.density), yend = max(chosen_chain$eu.bsm.density)) %>%
layout(autosize = F, width = 800, height = 500)
density_eu_bsm
eu_bsm_lm_call <- lm(calls.Last~eu.bsm.calls, data = chosen_chain)
eu_bsm_lm_put <- lm(calls.Last~eu.bsm.calls, data = chosen_chain)
summary(eu_bsm_lm_call)
summary(eu_bsm_lm_put)
extraction_eu_mln <- extract.mln.density(r = rates$risk.free.rate,
y = rates$dividend.yield,
te = days_to_expiration/365,
s0 = spot_price,
market.calls = chosen_chain$calls.Last,
call.strikes = chosen_chain$calls.Strike,
market.puts = chosen_chain$puts.Last,
put.strikes = chosen_chain$calls.Strike,
lambda = 1, hessian.flag = F)
density_eu_mln <- dmln(x = chosen_chain$calls.Strike,
alpha.1 = extraction_eu_mln$alpha.1,
meanlog.1 = extraction_eu_mln$meanlog.1,
meanlog.2 = extraction_eu_mln$meanlog.2,
sdlog.1 = extraction_eu_mln$sdlog.1,
sdlog.2 = extraction_eu_mln$sdlog.2)
chosen_chain$eu.mln.density <- density_eu_mln
density_eu_bsm <- plot_ly(chosen_chain, x = ~calls.Strike, y = ~eu.mln.density,
name = "BSM Risk Neutal Density",
type = "scatter", mode = "lines+markers") %>%
add_segments(name = "Spot Price", x = spot_price, xend = spot_price,
y = min(chosen_chain$eu.mln.density), yend = max(chosen_chain$eu.mln.density)) %>%
layout(autosize = F, width = 800, height = 500)
density_eu_bsm
eu_mln_pricing <- price.mln.option(r = rates$risk.free.rate,
y = rates$dividend.yield,
te = days_to_expiration/365,
k = chosen_chain$calls.Strike,
alpha.1 = extraction_eu_mln$alpha.1,
meanlog.1 = extraction_eu_mln$meanlog.1,
meanlog.2 = extraction_eu_mln$meanlog.2,
sdlog.1 = extraction_eu_mln$sdlog.1,
sdlog.2 = extraction_eu_mln$sdlog.2)
chosen_chain$eu.mln.calls <- eu_mln_pricing$call
chosen_chain$eu.mln.puts <- eu_mln_pricing$put
mln_model_actual <- plot_ly(chosen_chain, x = ~calls.Strike, y = ~calls.Last,
name = "Market Calls", type = "scatter", mode = "lines+markers") %>%
add_trace(y = ~eu.mln.calls, name = "MLN Calls", mode = "lines+markers") %>%
add_trace(y = ~puts.Last, name = "Market Puts", mode = "lines+markers") %>%
add_trace(y = ~eu.mln.puts, name = "MLN Puts", mode = "lines+markers") %>%
add_segments(name = "Spot Price", x = spot_price, xend = spot_price,
y = min(chosen_chain$calls.Last), yend = max(chosen_chain$calls.Last), line=list(dash="dash")) %>%
layout(autosize = F, width = 800, height = 500)
mln_model_actual
eu_mln_lm_call <- lm(calls.Last~eu.mln.calls, data = chosen_chain)
eu_mln_lm_put <- lm(calls.Last~eu.mln.calls, data = chosen_chain)
summary(eu_mln_lm_call)
summary(eu_mln_lm_put)
extraction_eu_gb <- extract.gb.density(r = rates$risk.free.rate,
y = rates$dividend.yield,
te = days_to_expiration/365,
s0 = spot_price,
market.calls = chosen_chain$calls.Last,
call.strikes = chosen_chain$calls.Strike,
market.puts = chosen_chain$puts.Last,
put.strikes = chosen_chain$calls.Strike,
lambda = 1, hessian.flag = F)
chosen_chain$eu.gb.density <- dgb(x = chosen_chain$calls.Strike,
a = extraction_eu_gb$a,
b = extraction_eu_gb$b,
v = extraction_eu_gb$v,
w = extraction_eu_gb$w)
density_eu_gb <- plot_ly(chosen_chain, x = ~calls.Strike, y = ~eu.gb.density,
name = "Genralised Beta Risk Neutal Density",
type = "scatter", mode = "lines+markers") %>%
add_segments(name = "Spot Price", x = spot_price, xend = spot_price,
y = min(chosen_chain$eu.gb.density), yend = max(chosen_chain$eu.gb.density)) %>%
layout(autosize = F, width = 800, height = 500)
density_eu_gb
eu_gb_pricing <- price.gb.option(r = rates$risk.free.rate,
y = rates$dividend.yield,
te = days_to_expiration/365,
s0 = spot_price,
k = chosen_chain$calls.Strike,
a = extraction_eu_gb$a,
b = extraction_eu_gb$b,
v = extraction_eu_gb$v,
w = extraction_eu_gb$w)
chosen_chain$eu.gb.calls <- eu_gb_pricing$call
chosen_chain$eu.gb.puts <- eu_gb_pricing$put
gb_model_actual <- plot_ly(chosen_chain, x = ~calls.Strike, y = ~calls.Last,
name = "Market Calls", type = "scatter", mode = "lines+markers") %>%
add_trace(y = ~eu.gb.calls, name = "GB Calls", mode = "lines+markers") %>%
add_trace(y = ~puts.Last, name = "Market Puts", mode = "lines+markers") %>%
add_trace(y = ~eu.gb.puts, name = "GB Puts", mode = "lines+markers") %>%
add_segments(name = "Spot Price", x = spot_price, xend = spot_price,
y = min(chosen_chain$calls.Last), yend = max(chosen_chain$calls.Last), line=list(dash="dash")) %>%
layout(autosize = F, width = 800, height = 500)
gb_model_actual
eu_gb_lm_call <- lm(calls.Last~eu.gb.calls, data = chosen_chain)
eu_gb_lm_put <- lm(calls.Last~eu.gb.calls, data = chosen_chain)
summary(eu_gb_lm_call)
summary(eu_gb_lm_put)
extraction_eu_ew <- extract.ew.density(r = rates$risk.free.rate,
y = rates$dividend.yield,
te = days_to_expiration/365,
s0 = spot_price,
market.calls = chosen_chain$calls.Last,
call.strikes = chosen_chain$calls.Strike,
lambda = 1, hessian.flag = F)
chosen_chain$eu.ew.density <- dew(x = chosen_chain$calls.Last,
r = rates$risk.free.rate,
y = rates$dividend.yield,
te = days_to_expiration/365,
s0 = spot_price,
sigma = extraction_eu_ew$sigma,
skew = extraction_eu_ew$skew,
kurt = extraction_eu_ew$kurt)
density_eu_ew <- plot_ly(chosen_chain, x = ~calls.Strike, y = ~eu.ew.density,
name = "Edgeworth Expansion Risk Neutal Density",
type = "scatter", mode = "lines+markers") %>%
add_segments(name = "Spot Price", x = spot_price, xend = spot_price,
y = min(chosen_chain$eu.ew.density), yend = max(chosen_chain$eu.ew.density)) %>%
layout(autosize = F, width = 800, height = 500)
density_eu_ew
eu_ew_pricing <- price.ew.option(k = chosen_chain$calls.Last,
r = rates$risk.free.rate,
y = rates$dividend.yield,
te = days_to_expiration/365,
s0 = spot_price,
sigma = extraction_eu_ew$sigma,
skew = extraction_eu_ew$skew,
kurt = extraction_eu_ew$kurt)
chosen_chain$eu.ew.calls <- eu_ew_pricing$call
chosen_chain$eu.ew.puts <- eu_ew_pricing$put
ew_model_actual <- plot_ly(chosen_chain, x = ~calls.Strike, y = ~calls.Last,
name = "Market Calls", type = "scatter", mode = "lines+markers") %>%
add_trace(y = ~eu.ew.calls, name = "EW Calls", mode = "lines+markers") %>%
add_trace(y = ~puts.Last, name = "Market Puts", mode = "lines+markers") %>%
add_trace(y = ~eu.ew.puts, name = "EW Puts", mode = "lines+markers") %>%
add_segments(name = "Spot Price", x = spot_price, xend = spot_price,
y = min(chosen_chain$calls.Last), yend = max(chosen_chain$calls.Last), line=list(dash="dash")) %>%
layout(autosize = F, width = 800, height = 500)
ew_model_actual
eu_ew_lm_call <- lm(calls.Last~eu.ew.calls, data = chosen_chain)
eu_ew_lm_put <- lm(calls.Last~eu.ew.calls, data = chosen_chain)
summary(eu_ew_lm_call)
summary(eu_ew_lm_put)
extraction_eu_shimko <- extract.shimko.density(market.calls = chosen_chain$calls.Last,
call.strikes = chosen_chain$calls.Strike,
r = rates$risk.free.rate,
y = rates$dividend.yield,
te = days_to_expiration/365,
s0 = spot_price,
lower = -10, upper = +10)
chosen_chain$eu.shimko.density <- dshimko(r = rates$risk.free.rate,
te = days_to_expiration/365,
k = chosen_chain$calls.Last,
s0 = spot_price,
y = rates$dividend.yield,
a0 = extraction_eu_shimko$implied.curve.obj$a0,
a1 = extraction_eu_shimko$implied.curve.obj$a1,
a2 = extraction_eu_shimko$implied.curve.obj$a2)
density_eu_shimko <- plot_ly(chosen_chain, x = ~calls.Strike, y = ~eu.shimko.density,
name = "Shimko Risk Neutal Density",
type = "scatter", mode = "lines+markers") %>%
add_segments(name = "Spot Price", x = spot_price, xend = spot_price,
y = min(chosen_chain$eu.shimko.density), yend = max(chosen_chain$eu.shimko.density)) %>%
layout(autosize = F, width = 800, height = 500)
density_eu_shimko
eu.shimko.call = numeric(length(chosen_chain$calls.Strike))
for (i in 1:length(chosen_chain$calls.Strike))
{
eu.shimko.call[i] = price.shimko.option(k = chosen_chain$calls.Strike[i],
r = rates$risk.free.rate,
y = rates$dividend.yield,
te = days_to_expiration/365,
s0 = spot_price,
a0 = extraction_eu_shimko$implied.curve.obj$a0,
a1 = extraction_eu_shimko$implied.curve.obj$a1,
a2 = extraction_eu_shimko$implied.curve.obj$a2)$put
}
eu.shimko.put = numeric(length(chosen_chain$calls.Strike))
for (j in 1:length(chosen_chain$calls.Strike))
{
eu.shimko.put[j]  = price.shimko.option(k = chosen_chain$calls.Strike[j],
r = rates$risk.free.rate,
y = rates$dividend.yield,
te = days_to_expiration/365,
s0 = spot_price,
a0 = extraction_eu_shimko$implied.curve.obj$a0,
a1 = extraction_eu_shimko$implied.curve.obj$a1,
a2 = extraction_eu_shimko$implied.curve.obj$a2)$call
}
chosen_chain$eu.shimko.calls <- eu.shimko.call
chosen_chain$eu.shimko.puts <- eu.shimko.put
shimko_model_actual <- plot_ly(chosen_chain, x = ~calls.Strike, y = ~calls.Last,
name = "Market Calls", type = "scatter", mode = "lines+markers") %>%
add_trace(y = ~eu.shimko.calls, name = "EW Calls", mode = "lines+markers") %>%
add_trace(y = ~puts.Last, name = "Market Puts", mode = "lines+markers") %>%
add_trace(y = ~eu.shimko.puts, name = "EW Puts", mode = "lines+markers") %>%
add_segments(name = "Spot Price", x = spot_price, xend = spot_price,
y = min(chosen_chain$calls.Last), yend = max(chosen_chain$calls.Last), line=list(dash="dash")) %>%
layout(autosize = F, width = 800, height = 500)
shimko_model_actual
eu_shimko_lm_call <- lm(calls.Last~eu.shimko.calls, data = chosen_chain)
eu_shimko_lm_put <- lm(calls.Last~eu.shimko.calls, data = chosen_chain)
summary(eu_shimko_lm_call)
summary(eu_shimko_lm_put)
extraction_am_mln <- extract.am.density(r = rates$risk.free.rate,
te = days_to_expiration/365,
s0 = spot_price,
market.calls = chosen_chain$calls.Last,
market.puts = chosen_chain$puts.Last,
strikes = chosen_chain$calls.Strike,
lambda = 1, hessian.flag = F)
extraction_am_mln$p.3 = 1 - extraction_am_mln$p.1 - extraction_am_mln$p.2
chosen_chain$am.mln.density <- dmln.am(x= chosen_chain$calls.Strike,
u.1 = extraction_am_mln$u.1,
u.2 = extraction_am_mln$u.2,
u.3 = extraction_am_mln$u.3,
sigma.1 = extraction_am_mln$sigma.1,
sigma.2 = extraction_am_mln$sigma.2,
sigma.3 = extraction_am_mln$sigma.3,
p.1 = extraction_am_mln$p.1,
p.2 = extraction_am_mln$ p.2)
am_expected_f0   =  sum(c(extraction_am_mln$p.1, extraction_am_mln$p.2, extraction_am_mln$p.3) *
exp(c(extraction_am_mln$u.1, extraction_am_mln$u.2, extraction_am_mln$u.3) +
(c(extraction_am_mln$sigma.1, extraction_am_mln$sigma.2, extraction_am_mln$sigma.3)^2)/2) )
density_am <- plot_ly(chosen_chain, x = ~calls.Strike, y = ~am.mln.density,
name = "American Mixture of Log Normals Risk Neutal Density",
type = "scatter", mode = "lines+markers") %>%
add_segments(name = "Spot Price", x = spot_price, xend = spot_price,
y = min(chosen_chain$am.mln.density), yend = max(chosen_chain$am.mln.density), line=list(dash="dash")) %>%
add_segments(name = "Expected mean value at expiration", x = am_expected_f0, xend = am_expected_f0,
y = min(chosen_chain$am.mln.density), yend = max(chosen_chain$am.mln.density), line=list(dash="dash")) %>%
layout(autosize = F, width = 800, height = 500)
density_am
chosen_chain$am.mln.calls = numeric(length(chosen_chain$calls.Strike))
chosen_chain$am.mln.puts  = numeric(length(chosen_chain$calls.Strike))
for (i in 1:length(chosen_chain$calls.Strike))
{
if (chosen_chain$calls.Strike[i] < am_expected_f0) {
chosen_chain$am.mln.calls[i] = price.am.option(k = chosen_chain$calls.Strike[i],
r = rates$risk.free.rate,
te = days_to_expiration/ 365,
w = extraction_am_mln$w.1,
u.1 = extraction_am_mln$u.1,
u.2 = extraction_am_mln$u.2,
u.3 = extraction_am_mln$u.3,
sigma.1 = extraction_am_mln$sigma.1,
sigma.2 = extraction_am_mln$sigma.2,
sigma.3 = extraction_am_mln$sigma.3,
p.1 = extraction_am_mln$p.1,
p.2 = extraction_am_mln$p.2)$call.value
chosen_chain$am.mln.puts[i]  = price.am.option(k = chosen_chain$calls.Strike[i],
r = rates$risk.free.rate,
te = days_to_expiration/ 365,
w = extraction_am_mln$w.2,
u.1 = extraction_am_mln$u.1,
u.2 = extraction_am_mln$u.2,
u.3 = extraction_am_mln$u.3,
sigma.1 = extraction_am_mln$sigma.1,
sigma.2 = extraction_am_mln$sigma.2,
sigma.3 = extraction_am_mln$sigma.3,
p.1 = extraction_am_mln$p.1,
p.2 = extraction_am_mln$p.2)$put.value
}  else {
chosen_chain$am.mln.calls[i] = price.am.option(k = chosen_chain$calls.Strike[i],
r = rates$risk.free.rate,
te = days_to_expiration/ 365,
w = extraction_am_mln$w.2,
u.1 = extraction_am_mln$u.1,
u.2 = extraction_am_mln$u.2,
u.3 = extraction_am_mln$u.3,
sigma.1 = extraction_am_mln$sigma.1,
sigma.2 = extraction_am_mln$sigma.2,
sigma.3 = extraction_am_mln$sigma.3,
p.1 = extraction_am_mln$p.1,
p.2 = extraction_am_mln$p.2)$call.value
chosen_chain$am.mln.puts[i]  = price.am.option(k = chosen_chain$calls.Strike[i],
r = rates$risk.free.rate,
te = days_to_expiration/ 365,
w = extraction_am_mln$w.1,
u.1 = extraction_am_mln$u.1,
u.2 = extraction_am_mln$u.2,
u.3 = extraction_am_mln$u.3,
sigma.1 = extraction_am_mln$sigma.1,
sigma.2 = extraction_am_mln$sigma.2,
sigma.3 = extraction_am_mln$sigma.3,
p.1 = extraction_am_mln$p.1,
p.2 = extraction_am_mln$p.2)$put.value
}
}
am_model_actual <- plot_ly(chosen_chain, x = ~calls.Strike, y = ~calls.Last,
name = "Market Calls", type = "scatter", mode = "lines+markers") %>%
add_trace(y = ~am.mln.calls, name = "MixLN Calls", mode = "lines+markers") %>%
add_trace(y = ~puts.Last, name = "Market Puts", mode = "lines+markers") %>%
add_trace(y = ~am.mln.puts, name = "MixLN Puts", mode = "lines+markers") %>%
add_segments(name = "Spot Price", x = spot_price, xend = spot_price,
y = min(chosen_chain$calls.Last), yend = max(chosen_chain$calls.Last), line=list(dash="dash")) %>%
add_segments(name = "Expected mean value at expiration", x = am_expected_f0, xend = am_expected_f0,
y = min(chosen_chain$calls.Last), yend = max(chosen_chain$calls.Last), line=list(dash="dash")) %>%
layout(autosize = F, width = 800, height = 500)
am_model_actual
am_mln_lm_call = lm(calls.Last~am.mln.calls, data = chosen_chain)
am_mln_lm_put = lm(puts.Last~am.mln.puts, data = chosen_chain)
am_expected_f0
summary(am_mln_lm_call)
summary(am_mln_lm_put)
